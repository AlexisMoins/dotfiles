" User configuration for vim
" Author: Alexis Moins
" Creation: 18 juin 2020

" Detects filetype, plugin and indentation
filetype plugin indent on

" Enables syntax coloration
syntax enable

" Load colorscheme depths
colorscheme test

" {{{ Plugins

call plug#begin('~/.vim/bundle')

" Make your Vim/Neovim as smart as VSCode
Plug 'neoclide/coc.nvim', { 'branch': 'release' }

" A Git wrapper so awesome, it should be illegal
Plug 'tpope/vim-fugitive'

" Comment stuff out
Plug 'tpope/vim-commentary'

" Delete / change add parentheses or quotes with ease
Plug 'tpope/vim-surround'

" 
Plug 'tpope/vim-projectionist'

call plug#end()

" List of coc extensions installed at first startup
"
let g:coc_global_extensions = [ 
            \ 'coc-pairs', 
            \ 'coc-pyright', 
            \ 'coc-java'
            \ ]

" }}}

" {{{ Options

" Time before CursorHold events are triggered
set updatetime=100

" Display relative line numbers
set relativenumber

" Automatically replace tabulations with spaces
set expandtab

" One tab equals 4 spaces
set tabstop=4

" Use 4 spaces for indentation
set shiftwidth=4

" Keep the indentation of the last line
set autoindent

" Change buffers without having to save them
set hidden

" Reload files modified from outside of vim
set autoread

" Ignore the case during search
set ignorecase

" Override 'ignorecase' if the search pattern contains upper case characters
set smartcase

" Display match during search
set incsearch

" Never wrap lines when they are too long
set nowrap  

" Always display the next 8 lines below or above the cursor 
set scrolloff=5

" Never pass beyond 120 characters on a line
set textwidth=120

" Open vertical splits to the right
set splitright

" Open horizontal splits below
set splitbelow

" Always display the statusline
set laststatus=2

" Set the content of the statusline
set statusline=%1*\ %0*\ \ %t\ \ %2*%m%=%0*\ \ %f%3*\ \ %y\ \ 

" Use markers to create folds
set foldmethod=marker

" Only fold 1 time
set foldnestmax=1

" Use the patience algorithm to show differences, don't take whitespaces into
" account and completely fold identical parts
set diffopt+=algorithm:patience,iwhiteall,context:0

" Highlight the text line of the cursor
set cursorline

" Add French to the known languages for spellcheck
set spelllang+=fr

" Location of the system dictionary
set dictionary=/usr/share/dict/words

" Don't add anything at the end of the folded line
set fillchars=fold:\ 

"
set listchars=eol:Â¬,extends:>,precedes:<,tab:>\ 

" During search, look inside of the current directory and subdirectories
set path=.,**

" Expected behaviour of the backspace key
set backspace=start,eol,indent

" Location of the .viminfo file
set viminfofile=${VIMDOTDIR}/.cache/viminfo

" Never use swapfiles
set noswapfile

" Save the undotree for each file in the .undo directory
set undofile

" Location of the .undo directory
set undodir=${VIMDOTDIR}/.cache/undo

"
set shortmess+=Ic

" Enables mouse usage in all modes
set mouse=a

" }}}

" Mappings {{{

let mapleader = " " 

nnoremap <silent> <leader>ins <Cmd>PlugInstall<cr>
nnoremap <silent> <leader>clean <Cmd>PlugClean<cr>

" Goes to the next / previous element of the arglist
nnoremap <Right> <Cmd>next<CR>
nnoremap <Left> <Cmd>previous<CR>

" Goes to the next / previous element of the quickfix list
nnoremap <Down> <Cmd>cnext<CR>
nnoremap <Up> <Cmd>cprevious<CR>

nnoremap - <Cmd>edit %:p:h<CR><C-L>
nnoremap + <Cmd>edit `pwd`<CR><C-L>

map gf <cmd>edit <cfile><cr>

nnoremap <leader>rl :%s/<C-R><C-W>//gce<left><left><left><left>
nnoremap <leader>rf :%s/<C-R><C-W>//ge<left><left><left>
nnoremap <leader>rg :bufdo %s/<C-R><C-W>//gce<left><left><left><<left>

nnoremap <leader>mk :silent make! <Bar> silent redraw!<CR>
nnoremap <leader>cs :mks! .vim-session<CR>
nnoremap <leader>ss <Cmd>source .vim-session<CR>

" Toggle options
nnoremap ;cl <Cmd>setl cul!<CR>
nnoremap ;nu <Cmd>setl nu! nornu<CR>
nnoremap ;rnu <Cmd>setl rnu! nonu<CR>
nnoremap ;st :setl list!<CR>
nnoremap ;sp :setl spell!<CR>

nnoremap <leader>cd <Cmd>lcd %:p:h<CR>
nnoremap <leader>cb <Cmd>lcd -<CR>
 
" nmap <leader>rg <Plug>(coc-rename)
" nmap <leader>rl <Plug>(coc-rename)

nnoremap <leader>src :source %<CR>
nnoremap <leader>syn <Cmd>call utils#SyntaxGroup()<CR>

nnoremap <Tab> magg=G`a

" Yanks until the end of the line
nnoremap Y y$

" Kepp visual selection when indenting
vnoremap > >gv
vnoremap < <gv

" Moves text around
vnoremap <silent> <C-j> :m '>+1<CR>gv=gv
vnoremap <silent> <C-k> :m '<-2<CR>gv=gv
nnoremap <silent> <C-j> :m .+1<CR>==
nnoremap <silent> <C-k> :m .-2<CR>==

" Keep position after visually yanking 
vnoremap y mpy`p
vnoremap Y mpY`p

" Navigates between splits more easily
nmap <silent> <leader>h <C-w>h
nmap <silent> <leader>j <C-w>j
nmap <silent> <leader>k <C-w>k
nmap <silent> <leader>l <C-w>l

" Selects the first match in the spelling list
nnoremap <C-s> mp[s1z=`p
inoremap <C-s> <C-c>[s1z=`]a

iabbrev <expr> tdd strftime("%d %b %Y")

" }}}
